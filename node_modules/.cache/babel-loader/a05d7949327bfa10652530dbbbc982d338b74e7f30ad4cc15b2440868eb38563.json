{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n//Math.floor(Math.random() * 10);\n\nconst boxesSlice = createSlice({\n  name: \"boxes\",\n  initialState: {\n    boxesValues: [4],\n    RandomValues: Array(4).fill().map(() => Math.floor(10 * Math.random())),\n    //fill array of size 4 with random numbers from 0 to 9\n    circleStates: [],\n    currentEnabledIndex: 0\n  },\n  reducers: {\n    setBoxes(state, action) {\n      const boxValue = action.payload;\n      let index = parseInt(JSON.stringify(boxValue.index), 10);\n      let value = parseInt(JSON.stringify(boxValue.value), 10);\n      state.boxesValues[index] = value;\n      console.log(`the random key is ${state.RandomValues}`);\n    },\n    incrementEnableIndex(state) {\n      state.currentEnabledIndex++;\n    },\n    check(state) {\n      let correctRightPlace = 0;\n      let correctWrongPlace = 0;\n      let uncorrect = 0;\n      for (let i = 0; i < 4; i++) {\n        console.log(typeof state.boxesValues[i]);\n        let tempValue = state.RandomValues[i];\n        console.log(typeof tempValue);\n        let tempIndex = 0;\n        state.boxesValues.map((value, index) => {\n          if (value === tempValue) {\n            tempIndex = index;\n          }\n        });\n        console.log(tempIndex);\n        if (tempIndex !== -1) {\n          if (tempIndex === i) {\n            correctRightPlace++;\n          } else if (state.RandomValues[tempIndex] !== state.boxesValues[tempIndex]) {\n            //what can be correct but in wrong place can also be correct and in right place for other boxes\n            correctWrongPlace++;\n          }\n        } else {\n          uncorrect++;\n        }\n        //state.RandomValues.shift();\n      }\n\n      state.circleStates.push({\n        index: state.currentEnabledIndex,\n        correctRightPlace,\n        correctWrongPlace,\n        uncorrect\n      });\n      console.log(`index: ${state.currentEnabledIndex}`);\n      console.log(`correctRightPlace: ${correctRightPlace}`);\n      console.log(`correctWrongPlace: ${correctWrongPlace}`);\n      console.log(`uncorrect: ${uncorrect}`);\n    }\n  }\n});\nexport const boxesActions = boxesSlice.actions;\nexport default boxesSlice;","map":{"version":3,"names":["createSlice","boxesSlice","name","initialState","boxesValues","RandomValues","Array","fill","map","Math","floor","random","circleStates","currentEnabledIndex","reducers","setBoxes","state","action","boxValue","payload","index","parseInt","JSON","stringify","value","console","log","incrementEnableIndex","check","correctRightPlace","correctWrongPlace","uncorrect","i","tempValue","tempIndex","push","boxesActions","actions"],"sources":["C:/Users/layans/Desktop/task/task4-secret-code/src/store/boxCheck.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n//Math.floor(Math.random() * 10);\r\n\r\nconst boxesSlice = createSlice({\r\n    name: \"boxes\",\r\n    initialState: {\r\n        boxesValues: [4],\r\n        RandomValues: Array(4)\r\n            .fill()\r\n            .map(() => Math.floor(10 * Math.random())), //fill array of size 4 with random numbers from 0 to 9\r\n        circleStates: [],\r\n        currentEnabledIndex: 0,\r\n    },\r\n    reducers: {\r\n        setBoxes(state, action) {\r\n            const boxValue = action.payload;\r\n            let index = parseInt(JSON.stringify(boxValue.index), 10);\r\n            let value = parseInt(JSON.stringify(boxValue.value), 10);\r\n            state.boxesValues[index] = value;\r\n            console.log(`the random key is ${ state.RandomValues }`);\r\n        },\r\n        incrementEnableIndex(state) {\r\n            state.currentEnabledIndex++;\r\n        },\r\n        check(state) {\r\n            let correctRightPlace = 0;\r\n            let correctWrongPlace = 0;\r\n            let uncorrect = 0;\r\n            for (let i = 0; i < 4; i++) {\r\n                console.log(typeof state.boxesValues[i]);\r\n                let tempValue = state.RandomValues[i];\r\n                console.log(typeof tempValue);\r\n                let tempIndex = 0;\r\n                state.boxesValues.map((value, index) => {\r\n                    if (value === tempValue) {\r\n                        tempIndex = index;\r\n                    }\r\n                });\r\n        console.log(tempIndex);\r\n        if (tempIndex !== -1) {\r\n          if (tempIndex === i) {\r\n            correctRightPlace++;\r\n          } else if (\r\n            state.RandomValues[tempIndex] !== state.boxesValues[tempIndex]\r\n          ) {\r\n            //what can be correct but in wrong place can also be correct and in right place for other boxes\r\n            correctWrongPlace++;\r\n          }\r\n        } else {\r\n          uncorrect++;\r\n        }\r\n        //state.RandomValues.shift();\r\n      }\r\n      state.circleStates.push({\r\n        index: state.currentEnabledIndex,\r\n        correctRightPlace,\r\n        correctWrongPlace,\r\n        uncorrect,\r\n      });\r\n      console.log(`index: ${state.currentEnabledIndex}`);\r\n      console.log(`correctRightPlace: ${correctRightPlace}`);\r\n      console.log(`correctWrongPlace: ${correctWrongPlace}`);\r\n      console.log(`uncorrect: ${uncorrect}`);\r\n    },\r\n  },\r\n});\r\n\r\nexport const boxesActions = boxesSlice.actions;\r\n\r\nexport default boxesSlice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}