{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\layans\\\\Desktop\\\\task\\\\task4-secret-code\\\\src\\\\leftContentComponents\\\\buttons.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport styles from \"../cssFiles/checkButtons.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { boxesActions } from \"../store/boxCheck\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst buttonCheckHandler = () => {};\nconst Buttons = () => {\n  _s();\n  const dispatch = useDispatch();\n  const currentEnabledIndex = useSelector(state => state.boxes.currentEnabledIndex);\n  //const show = useSelector((state) => state.counter.showCounter);\n  let buttonsColumn = Array.apply(null, Array(8)).map(Number.prototype.valueOf, 0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: buttonsColumn.map(() => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: buttonCheckHandler,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s(Buttons, \"ui7jRAsf5C1/++Mzi+Htb6O1d98=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Buttons;\nexport default Buttons;\n\n/* what are the global states?\r\nbutton handler will call the redux action reducer function to set the 4 numbers\r\nand then comapre\r\nwe will have isEnabled[8] for buttons global npm start\r\nwe will have other store for circles\r\nother functionalities\r\n */\nvar _c;\n$RefreshReg$(_c, \"Buttons\");","map":{"version":3,"names":["React","styles","useSelector","useDispatch","boxesActions","buttonCheckHandler","Buttons","dispatch","currentEnabledIndex","state","boxes","buttonsColumn","Array","apply","map","Number","prototype","valueOf","button"],"sources":["C:/Users/layans/Desktop/task/task4-secret-code/src/leftContentComponents/buttons.js"],"sourcesContent":["import React from \"react\";\r\nimport styles from \"../cssFiles/checkButtons.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { boxesActions } from \"../store/boxCheck\";\r\n\r\nconst buttonCheckHandler = () => {};\r\nconst Buttons = () => {\r\n  const dispatch = useDispatch();\r\n  const currentEnabledIndex = useSelector(\r\n    (state) => state.boxes.currentEnabledIndex\r\n  );\r\n  //const show = useSelector((state) => state.counter.showCounter);\r\n  let buttonsColumn = Array.apply(null, Array(8)).map(\r\n    Number.prototype.valueOf,\r\n    0\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {buttonsColumn.map(() => (\r\n        <button className={styles.button} onClick={buttonCheckHandler}>\r\n          <span>check</span>\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n\r\n/* what are the global states?\r\nbutton handler will call the redux action reducer function to set the 4 numbers\r\nand then comapre\r\nwe will have isEnabled[8] for buttons global npm start\r\nwe will have other store for circles\r\nother functionalities\r\n */\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,qCAAqC;AACxD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,QAAQ,mBAAmB;AAAC;AAAA;AAEjD,MAAMC,kBAAkB,GAAG,MAAM,CAAC,CAAC;AACnC,MAAMC,OAAO,GAAG,MAAM;EAAA;EACpB,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAMK,mBAAmB,GAAGN,WAAW,CACpCO,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACF,mBAAmB,CAC3C;EACD;EACA,IAAIG,aAAa,GAAGC,KAAK,CAACC,KAAK,CAAC,IAAI,EAAED,KAAK,CAAC,CAAC,CAAC,CAAC,CAACE,GAAG,CACjDC,MAAM,CAACC,SAAS,CAACC,OAAO,EACxB,CAAC,CACF;EAED,oBACE;IAAA,UACGN,aAAa,CAACG,GAAG,CAAC,mBACjB;MAAQ,SAAS,EAAEb,MAAM,CAACiB,MAAO;MAAC,OAAO,EAAEb,kBAAmB;MAAA,uBAC5D;QAAA,UAAM;MAAK;QAAA;QAAA;QAAA;MAAA;IAAO;MAAA;MAAA;MAAA;IAAA,QAErB;EAAC,iBACD;AAEP,CAAC;AAAC,GApBIC,OAAO;EAAA,QACMH,WAAW,EACAD,WAAW;AAAA;AAAA,KAFnCI,OAAO;AAsBb,eAAeA,OAAO;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}