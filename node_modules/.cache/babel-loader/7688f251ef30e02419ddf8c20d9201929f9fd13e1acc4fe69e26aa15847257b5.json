{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n//Math.floor(Math.random() * 10);\n\nconst boxesSlice = createSlice({\n  name: \"boxes\",\n  initialState: {\n    boxesValues: [4],\n    RandomValues: Array(4).fill().map(() => Math.floor(10 * Math.random())),\n    //fill array of size 4 with random numbers from 0 to 9\n    circleStates: [],\n    currentEnabledIndex: 0\n  },\n  reducers: {\n    setBoxes(state, action) {\n      const boxValue = action.payload;\n      let index = parseInt(boxValue.index + \"\");\n      let value = parseInt(boxValue.value + \"\");\n      state.boxesValues[index] = value;\n      console.log(`the random key is ${state.RandomValues}`);\n    },\n    incrementEnableIndex(state) {\n      state.currentEnabledIndex++;\n    },\n    check(state) {\n      let correctRightPlace = 0;\n      let correctWrongPlace = 0;\n      let uncorrect = 0;\n      for (let i = 0; i < 4; i++) {\n        let tempIndex = -1;\n        let tempValue = state.RandomValues[i];\n        for (var j = 0; j < state.boxesValues.length; j++) {\n          if (state.boxesValues[j] === tempValue) {\n            tempIndex = j;\n            break;\n          }\n        }\n        console.log(tempIndex);\n        if (tempIndex !== -1) {\n          if (tempIndex === i) {\n            correctRightPlace++;\n            state.boxesValues[tempIndex] = NaN;\n          } else if (state.RandomValues[tempIndex] !== state.boxesValues[tempIndex]) {\n            //what can be correct but in wrong place can also be correct and in right place for other boxes\n            correctWrongPlace++;\n            state.RandomValues[tempIndex] = NaN;\n            state.boxesValues[tempIndex] = NaN;\n          }\n        } else {\n          uncorrect++;\n        }\n        //state.RandomValues.shift();\n      }\n\n      state.circleStates.push({\n        index: state.currentEnabledIndex,\n        correctRightPlace,\n        correctWrongPlace,\n        uncorrect\n      });\n      console.log(`index: ${state.currentEnabledIndex}`);\n      console.log(`correctRightPlace: ${correctRightPlace}`);\n      console.log(`correctWrongPlace: ${correctWrongPlace}`);\n      console.log(`uncorrect: ${uncorrect}`);\n    }\n  }\n});\nexport const boxesActions = boxesSlice.actions;\nexport default boxesSlice;","map":{"version":3,"names":["createSlice","boxesSlice","name","initialState","boxesValues","RandomValues","Array","fill","map","Math","floor","random","circleStates","currentEnabledIndex","reducers","setBoxes","state","action","boxValue","payload","index","parseInt","value","console","log","incrementEnableIndex","check","correctRightPlace","correctWrongPlace","uncorrect","i","tempIndex","tempValue","j","length","NaN","push","boxesActions","actions"],"sources":["C:/Users/layans/Desktop/task/task4-secret-code/src/store/boxCheck.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n//Math.floor(Math.random() * 10);\r\n\r\nconst boxesSlice = createSlice({\r\n  name: \"boxes\",\r\n  initialState: {\r\n    boxesValues: [4],\r\n    RandomValues: Array(4)\r\n      .fill()\r\n      .map(() => Math.floor(10 * Math.random())), //fill array of size 4 with random numbers from 0 to 9\r\n    circleStates: [],\r\n    currentEnabledIndex: 0,\r\n  },\r\n  reducers: {\r\n    setBoxes(state, action) {\r\n      const boxValue = action.payload;\r\n      let index = parseInt(boxValue.index + \"\");\r\n      let value = parseInt(boxValue.value + \"\");\r\n      state.boxesValues[index] = value;\r\n      console.log(`the random key is ${state.RandomValues}`);\r\n    },\r\n    incrementEnableIndex(state) {\r\n      state.currentEnabledIndex++;\r\n    },\r\n    check(state) {\r\n      let correctRightPlace = 0;\r\n      let correctWrongPlace = 0;\r\n      let uncorrect = 0;\r\n      for (let i = 0; i < 4; i++) {\r\n        let tempIndex = -1;\r\n        let tempValue = state.RandomValues[i];\r\n        for (var j = 0; j < state.boxesValues.length; j++) {\r\n          if (state.boxesValues[j] === tempValue) {\r\n            tempIndex = j;\r\n            break;\r\n          }\r\n        }\r\n        console.log(tempIndex);\r\n        if (tempIndex !== -1) {\r\n          if (tempIndex === i) {\r\n            correctRightPlace++;\r\n            state.boxesValues[tempIndex] = NaN;\r\n          } else if (\r\n            state.RandomValues[tempIndex] !== state.boxesValues[tempIndex]\r\n          ) {\r\n            //what can be correct but in wrong place can also be correct and in right place for other boxes\r\n            correctWrongPlace++;\r\n            state.RandomValues[tempIndex] = NaN;\r\n            state.boxesValues[tempIndex] = NaN;\r\n          }\r\n        } else {\r\n          uncorrect++;\r\n        }\r\n        //state.RandomValues.shift();\r\n      }\r\n      state.circleStates.push({\r\n        index: state.currentEnabledIndex,\r\n        correctRightPlace,\r\n        correctWrongPlace,\r\n        uncorrect,\r\n      });\r\n      console.log(`index: ${state.currentEnabledIndex}`);\r\n      console.log(`correctRightPlace: ${correctRightPlace}`);\r\n      console.log(`correctWrongPlace: ${correctWrongPlace}`);\r\n      console.log(`uncorrect: ${uncorrect}`);\r\n    },\r\n  },\r\n});\r\n\r\nexport const boxesActions = boxesSlice.actions;\r\n\r\nexport default boxesSlice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}