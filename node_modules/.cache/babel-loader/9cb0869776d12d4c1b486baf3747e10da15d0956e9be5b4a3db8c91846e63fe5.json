{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\layans\\\\Desktop\\\\task\\\\task4-secret-code\\\\src\\\\components\\\\container\\\\leftContent\\\\boxesList\\\\box.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { boxesActions } from \"../../../../store/boxCheck\";\nimport styles from \"./boxesList.module.css\";\n\n/**\r\n * box component creates 4 box elements for each raw line, also checks if input is valid for each box\r\n * @param {Number} index\r\n * @returns input element\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Box = props => {\n  _s();\n  const buttonRef = useRef(null);\n  buttonRef.value = \"\";\n  const currentEnabledIndex = useSelector(state => state.boxes.currentEnabledIndex);\n  const justStarted = useSelector(state => state.boxes.justStarted);\n  const dispatch = useDispatch();\n  let [wrongInput, setWrongInput] = useState(Array.apply(null, Array(4)).map(() => false));\n  const [validBoxes, setValidBoxes] = useState(Array.apply(null, Array(4)).map(Number.prototype.valueOf, 1));\n  let rowBoxes = Array.apply(null, Array(4)).map((boxValue, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        maxLength: \"1\",\n        size: \"10\",\n        className: props.boxLineIndex !== currentEnabledIndex ? styles.disabled : wrongInput[index] ? styles[\"wrongInput\"] : \"\",\n        ref: buttonRef,\n        autoComplete: \"off\",\n        onChange: e => handleChange(index, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, props.boxLineIndex * 10 + index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  });\n  const handleChange = (index, event) => {\n    let value = event.target.value;\n    if ((/^\\d+$/.test(value) || value === \"\") && value.length <= 1) {\n      dispatch(boxesActions.setBoxes({\n        value,\n        index\n      }));\n      let tempArr = [...wrongInput];\n      tempArr[index] = false;\n      setWrongInput(tempArr);\n      if (validBoxes[index] === 0) {\n        //check if it was wrong and corrected then reset vriables to a valid state\n        tempArr = [...validBoxes];\n        tempArr[index] = 1;\n        setValidBoxes(tempArr);\n        dispatch(boxesActions.validInputFunction({\n          num: 1\n        }));\n      }\n    } else {\n      let tempArr = [...wrongInput];\n      tempArr[index] = true;\n      setWrongInput(tempArr);\n      if (validBoxes[index] === 1) {\n        //allows to decrement once\n        tempArr = [...validBoxes];\n        tempArr[index] = 0;\n        setValidBoxes(tempArr);\n        dispatch(boxesActions.validInputFunction({\n          num: -1\n        }));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: rowBoxes\n  }, void 0, false);\n};\n_s(Box, \"axINFWnqzOaMG3SoYp2cUDceB/I=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Box;\nexport default Box;\nvar _c;\n$RefreshReg$(_c, \"Box\");","map":{"version":3,"names":["React","useState","useRef","useSelector","useDispatch","boxesActions","styles","Box","props","buttonRef","value","currentEnabledIndex","state","boxes","justStarted","dispatch","wrongInput","setWrongInput","Array","apply","map","validBoxes","setValidBoxes","Number","prototype","valueOf","rowBoxes","boxValue","index","boxLineIndex","disabled","e","handleChange","event","target","test","length","setBoxes","tempArr","validInputFunction","num"],"sources":["C:/Users/layans/Desktop/task/task4-secret-code/src/components/container/leftContent/boxesList/box.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { boxesActions } from \"../../../../store/boxCheck\";\r\nimport styles from \"./boxesList.module.css\";\r\n\r\n/**\r\n * box component creates 4 box elements for each raw line, also checks if input is valid for each box\r\n * @param {Number} index\r\n * @returns input element\r\n */\r\n\r\nconst Box = (props) => {\r\n  const buttonRef = useRef(null);\r\n  buttonRef.value = \"\";\r\n  const currentEnabledIndex = useSelector(\r\n    (state) => state.boxes.currentEnabledIndex\r\n  );\r\n  const justStarted = useSelector((state) => state.boxes.justStarted);\r\n  const dispatch = useDispatch();\r\n  let [wrongInput, setWrongInput] = useState(\r\n    Array.apply(null, Array(4)).map(() => false)\r\n  );\r\n  const [validBoxes, setValidBoxes] = useState(\r\n    Array.apply(null, Array(4)).map(Number.prototype.valueOf, 1)\r\n  );\r\n  let rowBoxes = Array.apply(null, Array(4)).map((boxValue, index) => {\r\n    return (\r\n      <div key={props.boxLineIndex * 10 + index}>\r\n        <input\r\n          type=\"text\"\r\n          maxLength=\"1\"\r\n          size=\"10\"\r\n          className={\r\n            props.boxLineIndex !== currentEnabledIndex\r\n              ? styles.disabled\r\n              : wrongInput[index]\r\n              ? styles[\"wrongInput\"]\r\n              : \"\"\r\n          }\r\n          ref={buttonRef}\r\n          autoComplete=\"off\"\r\n          onChange={(e) => handleChange(index, e)}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const handleChange = (index, event) => {\r\n    let value = event.target.value;\r\n    if ((/^\\d+$/.test(value) || value === \"\") && value.length <= 1) {\r\n      dispatch(boxesActions.setBoxes({ value, index }));\r\n      let tempArr = [...wrongInput];\r\n      tempArr[index] = false;\r\n      setWrongInput(tempArr);\r\n      if (validBoxes[index] === 0) {\r\n        //check if it was wrong and corrected then reset vriables to a valid state\r\n        tempArr = [...validBoxes];\r\n        tempArr[index] = 1;\r\n        setValidBoxes(tempArr);\r\n        dispatch(boxesActions.validInputFunction({ num: 1 }));\r\n      }\r\n    } else {\r\n      let tempArr = [...wrongInput];\r\n      tempArr[index] = true;\r\n      setWrongInput(tempArr);\r\n      if (validBoxes[index] === 1) {\r\n        //allows to decrement once\r\n        tempArr = [...validBoxes];\r\n        tempArr[index] = 0;\r\n        setValidBoxes(tempArr);\r\n        dispatch(boxesActions.validInputFunction({ num: -1 }));\r\n      }\r\n    }\r\n  };\r\n  return <>{rowBoxes}</>;\r\n};\r\nexport default Box;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}