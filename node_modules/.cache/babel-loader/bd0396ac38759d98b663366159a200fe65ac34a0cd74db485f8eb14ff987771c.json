{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n//Math.floor(Math.random() * 10);\n\nconst boxesSlice = createSlice({\n  name: \"boxes\",\n  initialState: {\n    boxesValues: [],\n    RandomValues: Array(4).fill().map(() => Math.floor(10 * Math.random())),\n    //fill array of size 4 with random numbers from 0 to 9\n    circleStates: [],\n    currentEnabledIndex: 0\n  },\n  reducers: {\n    setBoxes(state, action) {\n      const value = action.payload;\n      state.boxesValues.push(value);\n      console.log(value);\n      console.log(`the random key is ${state.RandomValues}`);\n    },\n    incrementEnableIndex(state) {\n      state.currentEnabledIndex++;\n    },\n    check(state) {\n      // state.RandomValues[]\n      let correctRightPlace = 0;\n      let correctWrongPlace = 0;\n      let uncorrect = 0;\n      for (let i = 0; i < 4; ++i) {\n        if (state.boxesValues.includes(RandomValues[i])) {}\n      }\n      correctRightPlace++;\n      correctWrongPlace++;\n      uncorrect++;\n      state.circleStates.push({\n        index,\n        correctRightPlace,\n        correctWrongPlace,\n        uncorrect\n      });\n    }\n  }\n});\nexport const boxesActions = boxesSlice.actions;\nexport default boxesSlice;","map":{"version":3,"names":["createSlice","boxesSlice","name","initialState","boxesValues","RandomValues","Array","fill","map","Math","floor","random","circleStates","currentEnabledIndex","reducers","setBoxes","state","action","value","payload","push","console","log","incrementEnableIndex","check","correctRightPlace","correctWrongPlace","uncorrect","i","includes","index","boxesActions","actions"],"sources":["C:/Users/layans/Desktop/task/task4-secret-code/src/store/boxCheck.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n//Math.floor(Math.random() * 10);\r\n\r\nconst boxesSlice = createSlice({\r\n  name: \"boxes\",\r\n  initialState: {\r\n    boxesValues: [],\r\n    RandomValues: Array(4)\r\n      .fill()\r\n      .map(() => Math.floor(10 * Math.random())), //fill array of size 4 with random numbers from 0 to 9\r\n    circleStates: [],\r\n    currentEnabledIndex: 0,\r\n  },\r\n  reducers: {\r\n    setBoxes(state, action) {\r\n      const value = action.payload;\r\n      state.boxesValues.push(value);\r\n      console.log(value);\r\n      console.log(`the random key is ${state.RandomValues}`);\r\n    },\r\n    incrementEnableIndex(state) {\r\n      state.currentEnabledIndex++;\r\n    },\r\n    check(state) {\r\n      // state.RandomValues[]\r\n      let correctRightPlace = 0;\r\n      let correctWrongPlace = 0;\r\n      let uncorrect = 0;\r\n        \r\n        for (let i = 0; i < 4; ++i){\r\n            if (state.boxesValues.includes(RandomValues[i])) { \r\n\r\n            }\r\n        }\r\n      correctRightPlace++;\r\n      correctWrongPlace++;\r\n      uncorrect++;\r\n\r\n      state.circleStates.push({\r\n        index,\r\n        correctRightPlace,\r\n        correctWrongPlace,\r\n        uncorrect,\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const boxesActions = boxesSlice.actions;\r\n\r\nexport default boxesSlice;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C;;AAEA,MAAMC,UAAU,GAAGD,WAAW,CAAC;EAC7BE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAEC,KAAK,CAAC,CAAC,CAAC,CACnBC,IAAI,EAAE,CACNC,GAAG,CAAC,MAAMC,IAAI,CAACC,KAAK,CAAC,EAAE,GAAGD,IAAI,CAACE,MAAM,EAAE,CAAC,CAAC;IAAE;IAC9CC,YAAY,EAAE,EAAE;IAChBC,mBAAmB,EAAE;EACvB,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAE;MACtB,MAAMC,KAAK,GAAGD,MAAM,CAACE,OAAO;MAC5BH,KAAK,CAACZ,WAAW,CAACgB,IAAI,CAACF,KAAK,CAAC;MAC7BG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;MAClBG,OAAO,CAACC,GAAG,CAAE,qBAAoBN,KAAK,CAACX,YAAa,EAAC,CAAC;IACxD,CAAC;IACDkB,oBAAoB,CAACP,KAAK,EAAE;MAC1BA,KAAK,CAACH,mBAAmB,EAAE;IAC7B,CAAC;IACDW,KAAK,CAACR,KAAK,EAAE;MACX;MACA,IAAIS,iBAAiB,GAAG,CAAC;MACzB,IAAIC,iBAAiB,GAAG,CAAC;MACzB,IAAIC,SAAS,GAAG,CAAC;MAEf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAE,EAAEA,CAAC,EAAC;QACvB,IAAIZ,KAAK,CAACZ,WAAW,CAACyB,QAAQ,CAACxB,YAAY,CAACuB,CAAC,CAAC,CAAC,EAAE,CAEjD;MACJ;MACFH,iBAAiB,EAAE;MACnBC,iBAAiB,EAAE;MACnBC,SAAS,EAAE;MAEXX,KAAK,CAACJ,YAAY,CAACQ,IAAI,CAAC;QACtBU,KAAK;QACLL,iBAAiB;QACjBC,iBAAiB;QACjBC;MACF,CAAC,CAAC;IACJ;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMI,YAAY,GAAG9B,UAAU,CAAC+B,OAAO;AAE9C,eAAe/B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}