{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n//Math.floor(Math.random() * 10);\n\nconst boxesSlice = createSlice({\n  name: \"boxes\",\n  initialState: {\n    boxesValues: [],\n    RandomValues: Array(4).fill().map(() => Math.floor(10 * Math.random())),\n    //fill array of size 4 with random numbers from 0 to 9\n    correctRightPlace: 0,\n    correctWrongPlace: 0,\n    uncorrect: 0,\n    currentEnabledIndex: 0\n  },\n  reducers: {\n    setBoxes(state, action) {\n      const newBox = action.payload;\n      state.boxesValues.push({\n        index: newBox.index,\n        value: newBox.value\n      });\n      console.log(newBox.index);\n      console.log(newBox.value);\n      console.log(`the random key is ${state.RandomValues}`);\n    },\n    incrementEnableIndex(state) {\n      state.currentEnabledIndex++;\n    },\n    check(state) {\n      state.correctRightPlace;\n      state.correctWrongPlace;\n      state.uncorrect;\n    }\n  }\n});\nexport const boxesActions = boxesSlice.actions;\nexport default boxesSlice;","map":{"version":3,"names":["createSlice","boxesSlice","name","initialState","boxesValues","RandomValues","Array","fill","map","Math","floor","random","correctRightPlace","correctWrongPlace","uncorrect","currentEnabledIndex","reducers","setBoxes","state","action","newBox","payload","push","index","value","console","log","incrementEnableIndex","check","boxesActions","actions"],"sources":["C:/Users/layans/Desktop/task/task4-secret-code/src/store/boxCheck.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n//Math.floor(Math.random() * 10);\r\n\r\nconst boxesSlice = createSlice({\r\n  name: \"boxes\",\r\n  initialState: {\r\n    boxesValues: [],\r\n    RandomValues: Array(4)\r\n      .fill()\r\n      .map(() => Math.floor(10 * Math.random())), //fill array of size 4 with random numbers from 0 to 9\r\n    correctRightPlace: 0,\r\n    correctWrongPlace: 0,\r\n    uncorrect: 0,\r\n    currentEnabledIndex: 0,\r\n  },\r\n  reducers: {\r\n    setBoxes(state, action) {\r\n      const newBox = action.payload;\r\n      state.boxesValues.push({\r\n        index: newBox.index,\r\n        value: newBox.value,\r\n      });\r\n      console.log(newBox.index);\r\n      console.log(newBox.value);\r\n      console.log(`the random key is ${state.RandomValues}`);\r\n    },\r\n    incrementEnableIndex(state) {\r\n      state.currentEnabledIndex++;\r\n    },\r\n    check(state) {\r\n        state.correctRightPlace;\r\n        state.correctWrongPlace;\r\n        state.uncorrect;\r\n    },\r\n  },\r\n});\r\n\r\nexport const boxesActions = boxesSlice.actions;\r\n\r\nexport default boxesSlice;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C;;AAEA,MAAMC,UAAU,GAAGD,WAAW,CAAC;EAC7BE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAEC,KAAK,CAAC,CAAC,CAAC,CACnBC,IAAI,EAAE,CACNC,GAAG,CAAC,MAAMC,IAAI,CAACC,KAAK,CAAC,EAAE,GAAGD,IAAI,CAACE,MAAM,EAAE,CAAC,CAAC;IAAE;IAC9CC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE,CAAC;IACpBC,SAAS,EAAE,CAAC;IACZC,mBAAmB,EAAE;EACvB,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAE;MACtB,MAAMC,MAAM,GAAGD,MAAM,CAACE,OAAO;MAC7BH,KAAK,CAACd,WAAW,CAACkB,IAAI,CAAC;QACrBC,KAAK,EAAEH,MAAM,CAACG,KAAK;QACnBC,KAAK,EAAEJ,MAAM,CAACI;MAChB,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAACN,MAAM,CAACG,KAAK,CAAC;MACzBE,OAAO,CAACC,GAAG,CAACN,MAAM,CAACI,KAAK,CAAC;MACzBC,OAAO,CAACC,GAAG,CAAE,qBAAoBR,KAAK,CAACb,YAAa,EAAC,CAAC;IACxD,CAAC;IACDsB,oBAAoB,CAACT,KAAK,EAAE;MAC1BA,KAAK,CAACH,mBAAmB,EAAE;IAC7B,CAAC;IACDa,KAAK,CAACV,KAAK,EAAE;MACTA,KAAK,CAACN,iBAAiB;MACvBM,KAAK,CAACL,iBAAiB;MACvBK,KAAK,CAACJ,SAAS;IACnB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMe,YAAY,GAAG5B,UAAU,CAAC6B,OAAO;AAE9C,eAAe7B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}